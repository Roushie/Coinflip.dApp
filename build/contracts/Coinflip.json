{
  "contractName": "Coinflip",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "returnedQueryID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betResult",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "netamount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "QueryCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "InitialQueryID",
          "type": "bytes32"
        }
      ],
      "name": "QueryInitiated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resulttest",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Flip",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"returnedQueryID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betResult\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"netamount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"QueryCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"InitialQueryID\",\"type\":\"bytes32\"}],\"name\":\"QueryInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Flip\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resulttest\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/rauno/Desktop/Computer Science/Truffle/Coinflip/contracts/coinflip.sol\":\"Coinflip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/rauno/Desktop/Computer Science/Truffle/Coinflip/contracts/Ownable.sol\":{\"keccak256\":\"0x3b37c974cda5817a23f70cb6075250794614a862a07b37e5b4632a880a78e113\",\"urls\":[\"bzz-raw://045b89b1c4123ce5550c69f1143a627d0f88e4ffea67d5055da0618e6fba530a\",\"dweb:/ipfs/QmZ5aAC2NCSXXKNP4b3VJhs9CiQBkjY1zAu6oeRKdREEui\"]},\"/C/Users/rauno/Desktop/Computer Science/Truffle/Coinflip/contracts/coinflip.sol\":{\"keccak256\":\"0x7fb875441cd91c99ec427a123c74610fb1435bd60670373d3e1c1d50f37f15d4\",\"urls\":[\"bzz-raw://b75f29386b2a5228b586dd1a4eef26ca017056d59527e54dc64477e75f4ed4a6\",\"dweb:/ipfs/QmcMgcZTRA6s1jmVNda9vY5unQRGCcSDDnvs39xqVuezYB\"]},\"/C/Users/rauno/Desktop/Computer Science/Truffle/Coinflip/contracts/provableAPI.sol\":{\"keccak256\":\"0xc2fc757b4c0415905e1f833eb37ff5c2c4e7e0bfb7664a5ed3e616bf5b5c00fc\",\"urls\":[\"bzz-raw://88d38166e0e280ac4b428153093f8e56e14102ad7e44e8ed255dc30e0a2103b3\",\"dweb:/ipfs/QmRGQXBVhqXYxspfJZapGuaoTQKDHoayTWEZ9P6go94wgL\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "81:2613:2:-:0;;;234:10:1;226:5;;:18;;;;;;;;;;;;;;;;;;165:35:2;11308:4:3;183:16:2;;165:17;;;:35;;:::i;:::-;81:2613;;37169:116:3;11930:1;11906:26;;11914:3;;;;;;;;;;;11906:26;;;11905:64;;;;11967:1;11938:25;11958:3;;;;;;;;;;;11938:11;;;:25;;:::i;:::-;:30;11905:64;11901:130;;;11985:35;11562:1;11985:19;;;:35;;:::i;:::-;;11901:130;12065:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12044:37;;12052:8;;;;;;;;;;;12044:37;;;12040:106;;12118:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12097:8;;:38;;;;;;;;;;;;;;;;;;12040:106;37248:8:::1;;;;;;;;;;;:21;;;37270:7;37248:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;37169:116:::0;:::o;37428:147::-;37487:10;37553:5;37541:18;37532:27;;37518:51;;;:::o;12638:205::-;12703:16;12815:21;:19;;;:21;;:::i;:::-;12808:28;;12638:205;;;:::o;13117:2031::-;13166:16;13256:1;13198:55;13210:42;13198:11;;;:55;;:::i;:::-;:59;13194:246;;;13309:42;13283:3;;:69;;;;;;;;;;;;;;;;;;13366:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13425:4;13418:11;;;;13194:246;13511:1;13453:55;13465:42;13453:11;;;:55;;:::i;:::-;:59;13449:255;;;13572:42;13546:3;;:69;;;;;;;;;;;;;;;;;;13629:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;13689:4;13682:11;;;;13449:255;13775:1;13717:55;13729:42;13717:11;;;:55;;:::i;:::-;:59;13713:250;;;13834:42;13808:3;;:69;;;;;;;;;;;;;;;;;;13891:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;13948:4;13941:11;;;;13713:250;14034:1;13976:55;13988:42;13976:11;;;:55;;:::i;:::-;:59;13972:254;;;14095:42;14069:3;;:69;;;;;;;;;;;;;;;;;;14152:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14211:4;14204:11;;;;13972:254;14297:1;14239:55;14251:42;14239:11;;;:55;;:::i;:::-;:59;14235:252;;;14357:42;14331:3;;:69;;;;;;;;;;;;;;;;;;14414:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14472:4;14465:11;;;;14235:252;14558:1;14500:55;14512:42;14500:11;;;:55;;:::i;:::-;:59;14496:202;;;14619:42;14593:3;;:69;;;;;;;;;;;;;;;;;;14683:4;14676:11;;;;14496:202;14769:1;14711:55;14723:42;14711:11;;;:55;;:::i;:::-;:59;14707:201;;;14829:42;14803:3;;:69;;;;;;;;;;;;;;;;;;14893:4;14886:11;;;;14707:201;14979:1;14921:55;14933:42;14921:11;;;:55;;:::i;:::-;:59;14917:203;;;15041:42;15015:3;;:69;;;;;;;;;;;;;;;;;;15105:4;15098:11;;;;14917:203;15136:5;15129:12;;13117:2031;;:::o;12849:125::-;12954:13;12930:21;:37;;;;;;;;;;;;:::i;:::-;;12849:125;:::o;81:2613:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "81:2613:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2568:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;862:972;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1840:722;;;:::i;:::-;;50:20:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;259:23:2;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2568:123;132:5:1;;;;;;;;;;118:19;;:10;:19;;;110:28;;;;;;2658:10:2::1;:19;;:27;2678:6;2658:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2568:123:::0;:::o;862:972::-;980:20;:18;:20::i;:::-;966:34;;:10;:34;;;958:43;;;;;;1086:1;1016:66;1058:8;1067:7;1075:6;1016:41;:66::i;:::-;:71;;;1008:80;;;;;;1154:7;1135:10;:27;;;;;;;;;;;;:::i;:::-;;1169:20;1240:1;1227:7;1210:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1200:36;;;;;;1192:45;;:49;;;;;;1169:72;;1407:12;1376:7;:17;1384:8;1376:17;;;;;;;;;;;:28;;:43;;;;1549:1;1517:7;:17;1525:8;1517:17;;;;;;;;;;;:28;;;:33;1513:164;;;1595:7;:17;1603:8;1595:17;;;;;;;;;;;:32;;;;;;;;;;;;:41;;:74;1667:1;1637:7;:17;1645:8;1637:17;;;;;;;;;;;:27;;;:31;1595:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:164;1688:91;1703:8;1713:7;:17;1721:8;1713:17;;;;;;;;;;;:28;;;1743:7;:17;1751:8;1743:17;;;;;;;;;;;:27;;;1772:6;1688:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:972;;;;:::o;1840:722::-;1983:1;1971:9;:13;1946:21;:39;1942:192;;;2118:8;;;1942:192;2140:15;2158:39;2184:1;2187;2190:6;2158:25;:39::i;:::-;2140:57;;2312:23;2327:7;2312:23;;;;;;;;;;;;;;;;;;2409:10;2375:7;:16;2383:7;2375:16;;;;;;;;;;;:31;;;:44;;;;;;;;;;;;;;;;;;2503:9;2474:7;:16;2482:7;2474:16;;;;;;;;;;;:26;;:38;;;;1840:722;:::o;50:20:1:-;;;;;;;;;;;;:::o;259:23:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;37292:130:3:-;37352:24;11930:1;11906:26;;11914:3;;;;;;;;;;;11906:26;;;11905:64;;;;11967:1;11938:25;11958:3;;;;;;;;;;;11938:11;:25::i;:::-;:30;11905:64;11901:130;;;11985:35;11562:1;11985:19;:35::i;:::-;;11901:130;12065:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12044:37;;12052:8;;;;;;;;;;;12044:37;;;12040:106;;12118:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12097:8;;:38;;;;;;;;;;;;;;;;;;12040:106;37395:8:::1;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;37388:27;;37292:130:::0;:::o;50555:579::-;50686:17;50813:16;:6;50820:1;50813:9;;;;;;;;;;;;;;;;:16;;;;;50812:40;;;;50835:16;:6;50842:1;50835:9;;;;;;;;;;;;;;;;:16;;;;;50812:40;:74;;;;50883:1;50857:28;;50863:6;50870:1;50863:9;;;;;;;;;;;;;;;;50857:16;;:28;;;;50812:74;50808:113;;;50909:1;50902:8;;;;50808:113;50930:18;50951:96;50987:6;50995:8;51011:7;51021:25;:23;:25::i;:::-;50951:35;:96::i;:::-;50930:117;;51062:13;51057:53;;51098:1;51091:8;;;;;51057:53;51126:1;51119:8;;;50555:579;;;;;;:::o;45131:2648::-;45233:16;45280:1;45270:7;:11;45269:32;;;;;45298:2;45287:7;:13;;45269:32;45261:41;;;;;;45322:2;45312:12;;;;45380:19;45412:1;45402:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45380:34;;45447:7;45436:20;;45424:6;45431:1;45424:9;;;;;;;;;;;:32;;;;;;;;;;;45466:19;45498:2;45488:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45466:35;;45511:27;45551:2;45541:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45511:43;;45564:30;45597:40;:38;:40::i;:::-;45564:73;;45685:4;45677:6;45670:20;46036:11;46024:10;46020:28;46015:1;46005:8;46001:16;45991:27;45987:62;45980:4;45972:6;45968:17;45961:89;46086:4;46070:14;46063:28;46138:22;46131:4;46115:14;46111:25;46104:57;46180:18;46211:2;46201:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46180:34;;46272:6;46265:4;46258:5;46254:16;46247:32;46298:25;46336:1;46326:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46298:40;;46348;46358:5;46365:2;46369:1;46372:12;46386:1;46348:9;:40::i;:::-;;46398:20;;:::i;:::-;:62;;;;;;;;46422:6;46398:62;;;;46430:6;46398:62;;;;46438:14;46398:62;;;;46454:5;46398:62;;;;;46470:15;46488:47;;;;;;;;;;;;;;;;;;46513:4;46519:15;46488:14;:47::i;:::-;46470:65;;46545:30;46588:1;46578:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46545:45;;46656:4;46642:12;46638:23;46632:30;46720:65;46717:1;46713:73;46706:4;46687:17;46683:28;46675:112;46845:63;46842:1;46838:71;46831:4;46812:17;46808:28;46800:110;46968:61;46965:1;46961:69;46954:4;46935:17;46931:28;46923:108;47089:59;47086:1;47082:67;47075:4;47056:17;47052:28;47044:106;47208:57;47205:1;47201:65;47194:4;47175:17;47171:28;47163:104;47325:55;47322:1;47318:63;47311:4;47292:17;47288:28;47280:102;47440:53;47437:1;47433:61;47426:4;47407:17;47403:28;47395:100;47553:51;47550:1;47546:59;47539:4;47520:17;47516:28;47508:98;46609:1007;47625:123;47657:7;47693:17;47712:4;47717:1;47712:7;;;;;;;;;;;47721:15;47728:4;47733:1;47728:7;;;;;;;;;;;47721:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47738:4;47743:1;47738:7;;;;;;;;;;;47676:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47666:81;;;;;;47625:31;:123::i;:::-;47765:7;47758:14;;;;;;;;;;;45131:2648;;;;;:::o;37428:147::-;37487:10;37553:5;37541:18;37532:27;;37518:51;;;:::o;12638:205::-;12703:16;12815:21;:19;:21::i;:::-;12808:28;;12638:205;;;:::o;12980:131::-;13038:26;13083:21;13076:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12980:131;:::o;51540:2755::-;51692:19;51835:22;51909:2;51904:1;51881:6;51888:10;51881:18;;;;;;;;;;;;;;;;51875:25;;51870:31;;:35;51860:6;:46;:51;51835:76;;51921:20;51954:2;51944:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51921:36;;51967:52;51977:6;51985:17;52004:2;52008:7;52017:1;51967:9;:52::i;:::-;;52084:48;52108:12;52122:8;52091:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52084:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52067:66;;;;;;;;;;;;;;;;;;;;;;;;;52057:77;;;;;;52045:7;52035:18;;;;;;:99;52029:145;;52158:5;52151:12;;;;;;52029:145;52183:17;52278:1;52224:6;52271:1;52252:15;52231:17;:37;:41;52224:49;;;;;;;;;;;;;;;;52218:56;;52213:62;;:66;52203:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52183:97;;52290:78;52300:6;52329:15;52308:17;:37;52347:4;:11;52360:4;52366:1;52290:9;:78::i;:::-;;52536:90;52555:12;52562:4;52555:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52569:7;52589:6;52621:1;52616:2;52596:17;:22;:26;52589:34;;;;;;;;;;;;;;;;52583:41;;52578:47;;52536:18;:90::i;:::-;52531:134;;52649:5;52642:12;;;;;;;52531:134;52911:29;52953:10;52943:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52911:53;;52974:74;52984:6;53012:2;52992:17;:22;53016:10;53028:16;53046:1;52974:9;:74::i;:::-;;53058:26;53097:2;53087:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53058:42;;53110:15;53182:2;53168:4;:11;53154:10;53148:2;53128:17;:22;:37;:51;:56;53110:74;;53194:56;53204:6;53225:2;53212:10;:15;53229:2;53233:13;53248:1;53194:9;:56::i;:::-;;53260:25;53288:21;53295:13;53288:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53260:49;;53386:16;53404:17;53369:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53359:64;;;;;;53323:22;:32;53346:8;53323:32;;;;;;;;;;;;:100;53319:230;;;53488:22;:32;53511:8;53488:32;;;;;;;;;;;53481:39;;;53319:230;;;53544:5;53537:12;;;;;;;;;;;53319:230;53671:20;53704:15;53694:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53671:49;;53730:65;53740:6;53748:17;53767:15;53784:7;53793:1;53730:9;:65::i;:::-;;53810:47;53820:15;53827:7;53820:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53837:4;53843:13;53810:9;:47::i;:::-;53805:91;;53880:5;53873:12;;;;;;;;;;;;53805:91;53993:41;:60;54035:17;53993:60;;;;;;;;;;;;;;;;;;;;;53988:224;;54132:69;54182:6;54190:10;54132:49;:69::i;:::-;54069:41;:60;54111:17;54069:60;;;;;;;;;;;;:132;;;;;;;;;;;;;;;;;;53988:224;54228:41;:60;54270:17;54228:60;;;;;;;;;;;;;;;;;;;;;54221:67;;;;;;;;;;51540:2755;;;;;;;:::o;37721:169::-;37801:23;11930:1;11906:26;;11914:3;;;;;;;;;;;11906:26;;;11905:64;;;;11967:1;11938:25;11958:3;;;;;;;;;;;11938:11;:25::i;:::-;:30;11905:64;11901:130;;;11985:35;11562:1;11985:19;:35::i;:::-;;11901:130;12065:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12044:37;;12052:8;;;;;;;;;;;12044:37;;;12040:106;;12118:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12097:8;;:38;;;;;;;;;;;;;;;;;;12040:106;37843:8:::1;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;37836:47;;37721:169:::0;:::o;54430:693::-;54558:25;54595:14;54622:9;54612:7;:19;54595:36;;54663:9;54649:3;:10;:23;;54641:32;;;;;;54728:6;54742:11;54737:2;:16;54728:25;;54844:6;54858:9;54853:2;:14;54844:23;;54877:220;54908:7;54894:11;54889:2;:16;:26;54884:1;:32;54877:220;;;54987:1;54980:5;54976:13;54970:20;55027:3;55023:1;55018:3;55014:11;55007:24;54941:104;55063:2;55058:7;;;;55084:2;55079:7;;;;54877:220;;;55113:3;55106:10;;;;;54430:693;;;;;;;:::o;35126:377::-;35246:11;11930:1;11906:26;;11914:3;;;;;;;;;;;11906:26;;;11905:64;;;;11967:1;11938:25;11958:3;;;;;;;;;;;11938:11;:25::i;:::-;:30;11905:64;11901:130;;;11985:35;11562:1;11985:19;:35::i;:::-;;11901:130;12065:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12044:37;;12052:8;;;;;;;;;;;12044:37;;;12040:106;;12118:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12097:8;;:38;;;;;;;;;;;;;;;;;;12040:106;35269:22:::1;35306:1;35294:14;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35269:39;;35331:5;35337:1;35331:8;;;;;;;;;;;35318:7;35326:1;35318:10;;;;;;;;;;;;;:21;;;;35362:5;35368:1;35362:8;;;;;;;;;;;35349:7;35357:1;35349:10;;;;;;;;;;;;;:21;;;;35393:5;35399:1;35393:8;;;;;;;;;;;35380:7;35388:1;35380:10;;;;;;;;;;;;;:21;;;;35424:5;35430:1;35424:8;;;;;;;;;;;35411:7;35419:1;35411:10;;;;;;;;;;;;;:21;;;;35449:47;35464:11;35477:7;35486:9;35449:14;:47::i;:::-;35442:54;;;35126:377:::0;;;;;:::o;47785:152::-;47919:11;47884:22;:32;47907:8;47884:32;;;;;;;;;;;:46;;;;47785:152;;:::o;13117:2031::-;13166:16;13256:1;13198:55;13210:42;13198:11;:55::i;:::-;:59;13194:246;;;13309:42;13283:3;;:69;;;;;;;;;;;;;;;;;;13366:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13425:4;13418:11;;;;13194:246;13511:1;13453:55;13465:42;13453:11;:55::i;:::-;:59;13449:255;;;13572:42;13546:3;;:69;;;;;;;;;;;;;;;;;;13629:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13689:4;13682:11;;;;13449:255;13775:1;13717:55;13729:42;13717:11;:55::i;:::-;:59;13713:250;;;13834:42;13808:3;;:69;;;;;;;;;;;;;;;;;;13891:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13948:4;13941:11;;;;13713:250;14034:1;13976:55;13988:42;13976:11;:55::i;:::-;:59;13972:254;;;14095:42;14069:3;;:69;;;;;;;;;;;;;;;;;;14152:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14211:4;14204:11;;;;13972:254;14297:1;14239:55;14251:42;14239:11;:55::i;:::-;:59;14235:252;;;14357:42;14331:3;;:69;;;;;;;;;;;;;;;;;;14414:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14472:4;14465:11;;;;14235:252;14558:1;14500:55;14512:42;14500:11;:55::i;:::-;:59;14496:202;;;14619:42;14593:3;;:69;;;;;;;;;;;;;;;;;;14683:4;14676:11;;;;14496:202;14769:1;14711:55;14723:42;14711:11;:55::i;:::-;:59;14707:201;;;14829:42;14803:3;;:69;;;;;;;;;;;;;;;;;;14893:4;14886:11;;;;14707:201;14979:1;14921:55;14933:42;14921:11;:55::i;:::-;:59;14917:203;;;15041:42;15015:3;;:69;;;;;;;;;;;;;;;;;;15105:4;15098:11;;;;14917:203;15136:5;15129:12;;13117:2031;;:::o;51140:394::-;51251:19;51282:11;51296:4;51282:18;;51336:13;51318:7;:14;:31;51310:40;;;;;;51365:9;51360:145;51383:13;51380:1;:16;51360:145;;;51436:7;51444:1;51436:10;;;;;;;;;;;;;;;;51421:25;;;:8;51430:1;51421:11;;;;;;;;;;:25;;;;51417:78;;51475:5;51466:14;;51417:78;51398:3;;;;;;;51360:145;;;;51521:6;51514:13;;;51140:394;;;;;:::o;47943:1003::-;48042:17;48071:10;48091:14;48115:12;48137;48159:18;48190:2;48180:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48159:34;;48203:11;48248:4;48233:7;48241:1;48233:10;;;;;;;;;;;;;;;;48227:17;;48222:23;;:30;48217:1;:36;48203:50;;48271:40;48281:7;48290:6;48298:2;48302:5;48309:1;48271:9;:40::i;:::-;48263:48;;48321:18;48352:2;48342:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48321:34;;48375:6;48365:16;;;;48399:84;48409:7;48463:4;48439:7;48456:1;48447:6;:10;48439:19;;;;;;;;;;;;;;;;48433:26;;48428:32;;:39;48418:6;:50;48470:2;48474:5;48481:1;48399:9;:84::i;:::-;48391:92;;48541:2;48534:5;48530:14;48524:21;48516:29;;48583:2;48576:5;48572:14;48566:21;48558:29;;48624:41;48640:8;48650:2;48654:4;48660;48624:15;:41::i;:::-;48606:59;;;;;;;;48728:6;48679:55;;48713:7;48703:18;;;;;;48695:27;;48679:55;;;48675:265;;;48757:4;48750:11;;;;;;;;;;;48675:265;48810:41;48826:8;48836:2;48840:4;48846;48810:15;:41::i;:::-;48792:59;;;;;;;;48922:6;48873:55;;48907:7;48897:18;;;;;;48889:27;;48873:55;;;48865:64;;;;;;;;;47943:1003;;;;;;:::o;48952:1597::-;49068:19;49099:10;49260:17;49329:1;49301:6;49322:1;49308:11;:15;49301:23;;;;;;;;;;;;;;;;49295:30;;49290:36;;:40;49280:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49260:71;;49341:52;49351:6;49359:11;49372:4;:11;49385:4;49391:1;49341:9;:52::i;:::-;;49403:27;49443:2;49433:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49403:43;;49456:47;49466:6;49474:5;49481:2;49485:14;49501:1;49456:9;:47::i;:::-;;49513:20;49546:11;49536:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49513:45;;49592:1;49581:14;;49568:7;49576:1;49568:10;;;;;;;;;;;:27;;;;;;;;;;;49612:51;49622:6;49644:2;49630:11;:16;49648:2;49652:7;49661:1;49612:9;:51::i;:::-;;49673:21;:93;;;;;;;;;;;;;;;;;;;49776:43;49786:8;49796:1;49799:2;49803:7;49812:6;49776:9;:43::i;:::-;;49837:48;49847:15;49854:7;49847:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49864:4;49870:14;49837:9;:48::i;:::-;49829:56;;49900:5;49895:49;;49928:5;49921:12;;;;;;;;;49895:49;50045:22;:158;;;;;;;;;;;;;;;;;;;50213:20;50246:6;50236:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50213:40;;50276:4;50263:17;;:7;50271:1;50263:10;;;;;;;;;;;:17;;;;;;;;;;;50290:36;50300:6;50308:1;50311:2;50315:7;50324:1;50290:9;:36::i;:::-;;50336:17;50400:1;50377:6;50384:10;50377:18;;;;;;;;;;;;;;;;50371:25;;50366:31;;:35;50356:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50336:66;;50412:47;50422:6;50430;50438:4;:11;50451:4;50457:1;50412:9;:47::i;:::-;;50477:43;50487:15;50494:7;50487:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50504:4;50510:9;50477;:43::i;:::-;50469:51;;50537:5;50530:12;;;;;;;;;;48952:1597;;;;;:::o;29648:455::-;29767:11;11930:1;11906:26;;11914:3;;;;;;;;;;;11906:26;;;11905:64;;;;11967:1;11938:25;11958:3;;;;;;;;;;;11938:11;:25::i;:::-;:30;11905:64;11901:130;;;11985:35;11562:1;11985:19;:35::i;:::-;;11901:130;12065:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12044:37;;12052:8;;;;;;;;;;;12044:37;;;12040:106;;12118:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12097:8;;:38;;;;;;;;;;;;;;;;;;12040:106;29790:10:::1;29803:8;;;;;;;;;;;:17;;;29821:11;29834:9;29803:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;29790:54;;29890:9;29876:11;:23;29866:7;:33;29858:5;:41;29854:107;;;29922:1;29915:8:::0;::::1;;;;;;29854:107;29970:17;29990:14;29998:5;29990:7;:14::i;:::-;29970:34;;30021:8;;;;;;;;;;;:28;;;30057:5;30064:1;30067:11;30080:4;30086:9;30021:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;30014:82;;;;12155:1;29648:455:::0;;;;;:::o;12849:125::-;12954:13;12930:21;:37;;;;;;;;;;;;:::i;:::-;;12849:125;:::o;55330:982::-;55422:13;55437:25;55868:8;55886:12;55949:4;55943:11;55980:5;55974:4;55967:19;56021:2;56016;56010:4;56006:13;55999:25;56059:2;56054;56048:4;56044:13;56037:25;56097:2;56092;56086:4;56082:13;56075:25;56154:2;56148:4;56143:3;56137:4;56134:1;56131;56125:4;56120:37;56113:44;;56263:4;56257:11;56249:19;;55917:361;56295:3;56300:4;56287:18;;;;;;55330:982;;;;;;;:::o;44760:365::-;44821:26;44859:19;:17;:19::i;:::-;44888:24;;:::i;:::-;44922:22;44934:3;44939:4;44922:11;:22::i;:::-;44954:16;:3;:14;:16::i;:::-;44985:6;44980:88;45001:4;:11;44997:1;:15;44980:88;;;45033:24;45049:4;45054:1;45049:7;;;;;;;;;;;;;;45033:3;:15;;:24;;;;:::i;:::-;45014:3;;;;;;;44980:88;;;;45077:17;:3;:15;:17::i;:::-;45111:3;:7;;;45104:14;;;44760:365;;;:::o;57997:174::-;58091:4;58085:11;58149:4;58140:7;58136:18;58124:10;58118:4;58109:46;58059:106;:::o;4344:434::-;4418:13;4434:9;4418:25;;4474:1;4468:2;4457:8;:13;;;;;;:18;4453:81;;4520:2;4509:8;:13;;;;;;4503:2;:20;4491:32;;;;4453:81;4559:8;4543:4;:13;;:24;;;;;4655:4;4649:11;4686:3;4680:4;4673:17;4715:1;4710:3;4703:14;4752:8;4747:3;4743:18;4737:4;4730:32;4624:148;;;;:::o;10556:128::-;10627:50;10654:4;8712:1;10627:26;:50::i;:::-;10556:128;:::o;10171:178::-;10264:49;10275:4;8663:1;10299:6;:13;10264:10;:49::i;:::-;10323:19;10335:6;10323:4;:11;;:19;;;;:::i;:::-;;10171:178;;:::o;10820:136::-;10892:57;10919:4;8874:1;10892:26;:57::i;:::-;10820:136;:::o;9610:145::-;9710:38;9744:2;9739:1;9729:6;:11;;;;9728:18;9710:4;:11;;:38;;;;:::i;:::-;9610:145;;:::o;8882:722::-;8993:2;8983:6;:12;8979:619;;9011:42;9045:6;9040:1;9030:6;:11;;;;9029:22;;;9011:4;:11;;:42;;;;:::i;:::-;8979:619;;;9084:4;9074:6;:14;9070:528;;9104:38;9138:2;9133:1;9123:6;:11;;;;9122:18;9104:4;:11;;:38;;;;:::i;:::-;9156:25;9171:6;9179:1;9156:4;:14;;:25;;;;;:::i;:::-;;9070:528;;;9212:6;9202;:16;9198:400;;9234:38;9268:2;9263:1;9253:6;:11;;;;9252:18;9234:4;:11;;:38;;;;:::i;:::-;9286:25;9301:6;9309:1;9286:4;:14;;:25;;;;;:::i;:::-;;9198:400;;;9342:10;9332:6;:20;9328:270;;9368:38;9402:2;9397:1;9387:6;:11;;;;9386:18;9368:4;:11;;:38;;;;:::i;:::-;9420:25;9435:6;9443:1;9420:4;:14;;:25;;;;;:::i;:::-;;9328:270;;;9476:18;9466:6;:28;9462:136;;9510:38;9544:2;9539:1;9529:6;:11;;;;9528:18;9510:4;:11;;:38;;;;:::i;:::-;9562:25;9577:6;9585:1;9562:4;:14;;:25;;;;;:::i;:::-;;9462:136;9328:270;9198:400;9070:528;8979:619;8882:722;;;:::o;5404:1213::-;5483:21;;:::i;:::-;5553:4;:13;;;5535:4;:8;;;:15;5520:5;:12;:30;:46;5516:127;;;5582:50;5589:4;5630:1;5595:32;5599:4;:13;;;5614:5;:12;5595:3;:32::i;:::-;:36;5582:6;:50::i;:::-;5516:127;5652:9;5671:8;5689;5700:5;:12;5689:23;;5765:4;5759:11;5840:6;5834:13;5927:2;5918:6;5910;5906:19;5902:28;5894:36;;6050:5;6044:12;6036:6;6032:25;6024:6;6017:41;6113:2;6106:5;6102:14;6095:21;;5731:395;;6135:206;6148:2;6141:3;:9;6135:206;;6265:3;6259:10;6253:4;6246:24;6305:2;6297:10;;;;6328:2;6321:9;;;;6159:2;6152:9;;;;6135:206;;;6350:9;6382:1;6375:3;6370:2;:8;6362:3;:17;:21;6350:33;;6475:4;6471:9;6465:3;6459:10;6455:26;6527:4;6520;6514:11;6510:22;6571:7;6561:8;6558:21;6552:4;6545:35;6426:164;;6606:4;6599:11;;;;;;5404:1213;;;;:::o;6864:575::-;6963:4;:13;;;6959:1;6941:4;:8;;;:15;:19;:35;6937:97;;;6992:31;6999:4;7021:1;7005:4;:13;;;:17;6992:6;:31::i;:::-;6937:97;7086:4;7080:11;7161:6;7155:13;7252:2;7243:6;7235;7231:19;7227:28;7350:5;7344:4;7336:20;7396:1;7388:6;7384:14;7376:6;7369:30;7052:381;;;;;:::o;7731:735::-;7816:21;;:::i;:::-;7878:4;:13;;;7860:4;:8;;;:15;7853:4;:22;:38;7849:111;;;7907:42;7914:4;7947:1;7920:24;7924:4;:13;;;7939:4;7920:3;:24::i;:::-;:28;7907:6;:42::i;:::-;7849:111;7969:9;7995:1;7988:4;7981:3;:11;:15;7969:27;;8049:4;8043:11;8124:6;8118:13;8215:4;8206:6;8198;8194:19;8190:30;8352:5;8344:4;8340:9;8333:4;8327:11;8323:27;8320:38;8314:4;8307:52;8399:4;8391:6;8387:17;8379:6;8372:33;8015:424;;;8455:4;8448:11;;;7731:735;;;;;:::o;4963:146::-;5016:9;5046:2;5041;:7;5037:47;;;5071:2;5064:9;;;;5037:47;5100:2;5093:9;;4963:146;;;;;:::o;4784:173::-;4859:19;4881:4;:8;;;4859:30;;4899:21;4904:4;4910:9;4899:4;:21::i;:::-;4930:20;4937:4;4943:6;4930;:20::i;:::-;;4784:173;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "import \"./Ownable.sol\";\r\nimport \"./provableAPI.sol\";\r\npragma solidity 0.6.12;\r\n\r\ncontract Coinflip is Ownable, usingProvable {\r\n\r\nconstructor () public payable {\r\n  provable_setProof(proofType_Ledger);\r\n} // Payable because we want to deploy with ether.\r\n\r\n  bytes public resulttest;\r\n\r\n  struct Bet { // We use this struct to map query IDs to bet data.\r\n    address payable bettor_address;\r\n    uint256 betamount;\r\n    uint256 flipresult;\r\n  }\r\n\r\n  mapping (bytes32 => Bet) queries; //Create the mapping where we are gonna store every queryID and the player address, bet amount and result corresponding to that ID.\r\n\r\n  event QueryInitiated ( // Emit event with query ID for JS to listen for.\r\n    bytes32 InitialQueryID\r\n  );\r\n\r\n  event QueryCompleted (\r\n    bytes32 returnedQueryID,\r\n    uint256 betResult,\r\n    uint256 netamount,\r\n    bytes proof\r\n  );\r\n\r\n  function __callback(bytes32 _queryId, string memory _result, bytes memory _proof) public {\r\n    require(msg.sender == provable_cbAddress());\r\n    require(provable_randomDS_proofVerify__returnCode(_queryId,_result,_proof) == 0); // Require that the proof check passes.\r\n    resulttest = bytes(_result);\r\n    uint256 randomnumber = uint256(keccak256(abi.encodePacked(_result))) % 2; // Takes the result, encodes it, hashes it, converts it to an integer and returns either 0 or 1 if its even / odd respectively.\r\n    queries[_queryId].flipresult = randomnumber; //Now we have the result of the flip - let's say 1 == win. We store it in the mapping.\r\n    if (queries[_queryId].flipresult == 1){ // Pay out double 50% of the time.\r\n      queries[_queryId].bettor_address.transfer(queries[_queryId].betamount * 2);\r\n    }\r\n    emit QueryCompleted(_queryId, queries[_queryId].flipresult, queries[_queryId].betamount, _proof); // Here we emit the data we got from the oracle.\r\n  }\r\n\r\n  function Flip() public payable { //This is what the user of the dApp calls when they make a bet.\r\n    if (address(this).balance < (msg.value * 2)){ //Contract balance needs to be twice the size of the bet to pay out a win, so it won't accept bets if it has less than that.\r\n    revert();\r\n    }\r\n    bytes32 queryId = provable_newRandomDSQuery(0, 5, 200000); // Takes delay before execution, number of bytes requested and gas provided for callback as arguments.\r\n    emit QueryInitiated(queryId); // Emits query ID to track in JS\r\n    queries[queryId].bettor_address = msg.sender; //Map bettor address to random number query ID.\r\n    queries[queryId].betamount = msg.value; //Map bet amount to random number query ID.\r\n  }\r\n\r\n  function withdraw(uint amount) public onlyOwner{ //Withdraws specified amount in wei\r\n    msg.sender.transfer(amount);\r\n  }\r\n}\r\n",
  "sourcePath": "C:/Users/rauno/Desktop/Computer Science/Truffle/Coinflip/contracts/coinflip.sol",
  "ast": {
    "absolutePath": "/C/Users/rauno/Desktop/Computer Science/Truffle/Coinflip/contracts/coinflip.sol",
    "exportedSymbols": {
      "Coinflip": [
        255
      ]
    },
    "id": 256,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/C/Users/rauno/Desktop/Computer Science/Truffle/Coinflip/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 256,
        "sourceUnit": 58,
        "src": "0:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/rauno/Desktop/Computer Science/Truffle/Coinflip/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 256,
        "sourceUnit": 6626,
        "src": "25:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "54:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 62,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 57,
              "src": "102:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$57",
                "typeString": "contract Ownable"
              }
            },
            "id": 63,
            "nodeType": "InheritanceSpecifier",
            "src": "102:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 64,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6625,
              "src": "111:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6625",
                "typeString": "contract usingProvable"
              }
            },
            "id": 65,
            "nodeType": "InheritanceSpecifier",
            "src": "111:13:2"
          }
        ],
        "contractDependencies": [
          57,
          6625
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 255,
        "linearizedBaseContracts": [
          255,
          6625,
          57
        ],
        "name": "Coinflip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "160:44:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "proofType_Ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "183:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 68,
                      "name": "provable_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4367,
                      "src": "165:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "165:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "165:35:2"
                }
              ]
            },
            "documentation": null,
            "id": 73,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "142:2:2"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "160:0:2"
            },
            "scope": 255,
            "src": "130:74:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a376f663",
            "id": 75,
            "mutability": "mutable",
            "name": "resulttest",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 255,
            "src": "259:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 74,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "259:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Coinflip.Bet",
            "id": 82,
            "members": [
              {
                "constant": false,
                "id": 77,
                "mutability": "mutable",
                "name": "bettor_address",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 82,
                "src": "359:30:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 76,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "359:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 79,
                "mutability": "mutable",
                "name": "betamount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 82,
                "src": "396:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "396:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 81,
                "mutability": "mutable",
                "name": "flipresult",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 82,
                "src": "420:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 80,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "420:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Bet",
            "nodeType": "StructDefinition",
            "scope": 255,
            "src": "289:155:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 86,
            "mutability": "mutable",
            "name": "queries",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 255,
            "src": "450:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
              "typeString": "mapping(bytes32 => struct Coinflip.Bet)"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 83,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "459:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "450:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                "typeString": "mapping(bytes32 => struct Coinflip.Bet)"
              },
              "valueType": {
                "contractScope": null,
                "id": 84,
                "name": "Bet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 82,
                "src": "470:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bet_$82_storage_ptr",
                  "typeString": "struct Coinflip.Bet"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 90,
            "name": "QueryInitiated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "InitialQueryID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 90,
                  "src": "699:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "642:84:2"
            },
            "src": "621:106:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 100,
            "name": "QueryCompleted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "returnedQueryID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 100,
                  "src": "761:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "betResult",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 100,
                  "src": "791:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "netamount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 100,
                  "src": "815:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 100,
                  "src": "839:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "754:101:2"
            },
            "src": "733:123:2"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "951:883:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 110,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "966:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "966:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 112,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4379,
                            "src": "980:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "980:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "966:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "958:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "958:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 119,
                              "name": "_queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "1058:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 120,
                              "name": "_result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "1067:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 121,
                              "name": "_proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "1075:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 118,
                            "name": "provable_randomDS_proofVerify__returnCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6123,
                            "src": "1016:41:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
                              "typeString": "function (bytes32,string memory,bytes memory) returns (uint8)"
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1016:66:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1086:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1016:71:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1008:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:80:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:80:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 127,
                      "name": "resulttest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "1135:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 130,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "1154:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1148:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1148:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1148:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1135:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1135:27:2"
                },
                {
                  "assignments": [
                    135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135,
                      "mutability": "mutable",
                      "name": "randomnumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 189,
                      "src": "1169:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 134,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1169:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 147,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 141,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 104,
                                  "src": "1227:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 139,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1210:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1210:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1210:25:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 138,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1200:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1200:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1192:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1192:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1192:45:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1240:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1192:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1169:72:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 148,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "1376:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                            "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                          }
                        },
                        "id": 150,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 149,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1384:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1376:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bet_$82_storage",
                          "typeString": "struct Coinflip.Bet storage ref"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "flipresult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 81,
                      "src": "1376:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 152,
                      "name": "randomnumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "1407:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1376:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:43:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 155,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "1517:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                            "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                          }
                        },
                        "id": 157,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 156,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1525:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1517:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bet_$82_storage",
                          "typeString": "struct Coinflip.Bet storage ref"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "flipresult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 81,
                      "src": "1517:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1549:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1517:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 175,
                  "nodeType": "IfStatement",
                  "src": "1513:164:2",
                  "trueBody": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "1551:126:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 166,
                                    "name": "queries",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86,
                                    "src": "1637:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                                      "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                                    }
                                  },
                                  "id": 168,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 167,
                                    "name": "_queryId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 102,
                                    "src": "1645:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1637:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bet_$82_storage",
                                    "typeString": "struct Coinflip.Bet storage ref"
                                  }
                                },
                                "id": 169,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "betamount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 79,
                                "src": "1637:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1667:1:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "1637:31:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 161,
                                  "name": "queries",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "1595:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                                    "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                                  }
                                },
                                "id": 163,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 162,
                                  "name": "_queryId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 102,
                                  "src": "1603:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1595:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Bet_$82_storage",
                                  "typeString": "struct Coinflip.Bet storage ref"
                                }
                              },
                              "id": 164,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bettor_address",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 77,
                              "src": "1595:32:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1595:41:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1595:74:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 173,
                        "nodeType": "ExpressionStatement",
                        "src": "1595:74:2"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 177,
                        "name": "_queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1703:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 178,
                            "name": "queries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "1713:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                              "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                            }
                          },
                          "id": 180,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 179,
                            "name": "_queryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "1721:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1713:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$82_storage",
                            "typeString": "struct Coinflip.Bet storage ref"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "flipresult",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 81,
                        "src": "1713:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 182,
                            "name": "queries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "1743:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                              "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                            }
                          },
                          "id": 184,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 183,
                            "name": "_queryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "1751:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1743:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$82_storage",
                            "typeString": "struct Coinflip.Bet storage ref"
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "betamount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79,
                        "src": "1743:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1772:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 176,
                      "name": "QueryCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "1688:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1688:91:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "EmitStatement",
                  "src": "1683:96:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "38bbfa50",
            "id": 190,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 190,
                  "src": "882:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 190,
                  "src": "900:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 190,
                  "src": "923:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "881:62:2"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:0:2"
            },
            "scope": 255,
            "src": "862:972:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 237,
              "nodeType": "Block",
              "src": "1871:691:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 195,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1954:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Coinflip_$255",
                              "typeString": "contract Coinflip"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Coinflip_$255",
                              "typeString": "contract Coinflip"
                            }
                          ],
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1946:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 193,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1946:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1946:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1946:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 198,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1971:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1971:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1983:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1971:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 202,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1970:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1946:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 208,
                  "nodeType": "IfStatement",
                  "src": "1942:192:2",
                  "trueBody": {
                    "id": 207,
                    "nodeType": "Block",
                    "src": "1986:148:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 204,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "2118:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2118:8:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 206,
                        "nodeType": "ExpressionStatement",
                        "src": "2118:8:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 210,
                      "mutability": "mutable",
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 237,
                      "src": "2140:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 209,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2140:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 216,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2184:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2187:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "323030303030",
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2190:6:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        "value": "200000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        }
                      ],
                      "id": 211,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5700,
                      "src": "2158:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2158:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2140:57:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 218,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "2327:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 217,
                      "name": "QueryInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2312:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2312:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 220,
                  "nodeType": "EmitStatement",
                  "src": "2307:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 221,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "2375:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                            "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                          }
                        },
                        "id": 223,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 222,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "2383:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2375:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bet_$82_storage",
                          "typeString": "struct Coinflip.Bet storage ref"
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bettor_address",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77,
                      "src": "2375:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2409:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2409:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2375:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "2375:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 229,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "2474:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                            "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                          }
                        },
                        "id": 231,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 230,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "2482:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2474:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bet_$82_storage",
                          "typeString": "struct Coinflip.Bet storage ref"
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "betamount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79,
                      "src": "2474:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 233,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2503:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2503:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2474:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "2474:38:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "81d7788f",
            "id": 238,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Flip",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1853:2:2"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1871:0:2"
            },
            "scope": 255,
            "src": "1840:722:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "2615:76:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "2678:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 245,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2658:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2658:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2658:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2658:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "2658:27:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 254,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 243,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 242,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 47,
                  "src": "2606:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2606:9:2"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 254,
                  "src": "2586:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2586:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2585:13:2"
            },
            "returnParameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2615:0:2"
            },
            "scope": 255,
            "src": "2568:123:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 256,
        "src": "81:2613:2"
      }
    ],
    "src": "0:2696:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/rauno/Desktop/Computer Science/Truffle/Coinflip/contracts/coinflip.sol",
    "exportedSymbols": {
      "Coinflip": [
        255
      ]
    },
    "id": 256,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/C/Users/rauno/Desktop/Computer Science/Truffle/Coinflip/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 256,
        "sourceUnit": 58,
        "src": "0:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/rauno/Desktop/Computer Science/Truffle/Coinflip/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 256,
        "sourceUnit": 6626,
        "src": "25:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "54:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 62,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 57,
              "src": "102:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$57",
                "typeString": "contract Ownable"
              }
            },
            "id": 63,
            "nodeType": "InheritanceSpecifier",
            "src": "102:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 64,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6625,
              "src": "111:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6625",
                "typeString": "contract usingProvable"
              }
            },
            "id": 65,
            "nodeType": "InheritanceSpecifier",
            "src": "111:13:2"
          }
        ],
        "contractDependencies": [
          57,
          6625
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 255,
        "linearizedBaseContracts": [
          255,
          6625,
          57
        ],
        "name": "Coinflip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "160:44:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "proofType_Ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "183:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 68,
                      "name": "provable_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4367,
                      "src": "165:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "165:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "165:35:2"
                }
              ]
            },
            "documentation": null,
            "id": 73,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "142:2:2"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "160:0:2"
            },
            "scope": 255,
            "src": "130:74:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a376f663",
            "id": 75,
            "mutability": "mutable",
            "name": "resulttest",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 255,
            "src": "259:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 74,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "259:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Coinflip.Bet",
            "id": 82,
            "members": [
              {
                "constant": false,
                "id": 77,
                "mutability": "mutable",
                "name": "bettor_address",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 82,
                "src": "359:30:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 76,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "359:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 79,
                "mutability": "mutable",
                "name": "betamount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 82,
                "src": "396:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "396:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 81,
                "mutability": "mutable",
                "name": "flipresult",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 82,
                "src": "420:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 80,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "420:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Bet",
            "nodeType": "StructDefinition",
            "scope": 255,
            "src": "289:155:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 86,
            "mutability": "mutable",
            "name": "queries",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 255,
            "src": "450:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
              "typeString": "mapping(bytes32 => struct Coinflip.Bet)"
            },
            "typeName": {
              "id": 85,
              "keyType": {
                "id": 83,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "459:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "450:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                "typeString": "mapping(bytes32 => struct Coinflip.Bet)"
              },
              "valueType": {
                "contractScope": null,
                "id": 84,
                "name": "Bet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 82,
                "src": "470:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bet_$82_storage_ptr",
                  "typeString": "struct Coinflip.Bet"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 90,
            "name": "QueryInitiated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "InitialQueryID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 90,
                  "src": "699:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "642:84:2"
            },
            "src": "621:106:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 100,
            "name": "QueryCompleted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "returnedQueryID",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 100,
                  "src": "761:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "betResult",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 100,
                  "src": "791:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "netamount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 100,
                  "src": "815:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 100,
                  "src": "839:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "754:101:2"
            },
            "src": "733:123:2"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "951:883:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 110,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "966:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "966:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 112,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4379,
                            "src": "980:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "980:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "966:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "958:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "958:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 119,
                              "name": "_queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 102,
                              "src": "1058:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 120,
                              "name": "_result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "1067:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 121,
                              "name": "_proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "1075:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 118,
                            "name": "provable_randomDS_proofVerify__returnCode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6123,
                            "src": "1016:41:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
                              "typeString": "function (bytes32,string memory,bytes memory) returns (uint8)"
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1016:66:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1086:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1016:71:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1008:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:80:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:80:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 127,
                      "name": "resulttest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "1135:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 130,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "1154:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1148:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1148:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1148:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1135:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1135:27:2"
                },
                {
                  "assignments": [
                    135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135,
                      "mutability": "mutable",
                      "name": "randomnumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 189,
                      "src": "1169:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 134,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1169:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 147,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 141,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 104,
                                  "src": "1227:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 139,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1210:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1210:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1210:25:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 138,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1200:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1200:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1192:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1192:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1192:45:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1240:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1192:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1169:72:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 148,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "1376:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                            "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                          }
                        },
                        "id": 150,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 149,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1384:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1376:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bet_$82_storage",
                          "typeString": "struct Coinflip.Bet storage ref"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "flipresult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 81,
                      "src": "1376:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 152,
                      "name": "randomnumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "1407:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1376:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:43:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 155,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "1517:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                            "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                          }
                        },
                        "id": 157,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 156,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1525:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1517:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bet_$82_storage",
                          "typeString": "struct Coinflip.Bet storage ref"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "flipresult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 81,
                      "src": "1517:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1549:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1517:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 175,
                  "nodeType": "IfStatement",
                  "src": "1513:164:2",
                  "trueBody": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "1551:126:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 166,
                                    "name": "queries",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86,
                                    "src": "1637:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                                      "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                                    }
                                  },
                                  "id": 168,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 167,
                                    "name": "_queryId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 102,
                                    "src": "1645:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1637:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bet_$82_storage",
                                    "typeString": "struct Coinflip.Bet storage ref"
                                  }
                                },
                                "id": 169,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "betamount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 79,
                                "src": "1637:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1667:1:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "1637:31:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 161,
                                  "name": "queries",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86,
                                  "src": "1595:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                                    "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                                  }
                                },
                                "id": 163,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 162,
                                  "name": "_queryId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 102,
                                  "src": "1603:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1595:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Bet_$82_storage",
                                  "typeString": "struct Coinflip.Bet storage ref"
                                }
                              },
                              "id": 164,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bettor_address",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 77,
                              "src": "1595:32:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1595:41:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1595:74:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 173,
                        "nodeType": "ExpressionStatement",
                        "src": "1595:74:2"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 177,
                        "name": "_queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1703:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 178,
                            "name": "queries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "1713:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                              "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                            }
                          },
                          "id": 180,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 179,
                            "name": "_queryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "1721:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1713:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$82_storage",
                            "typeString": "struct Coinflip.Bet storage ref"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "flipresult",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 81,
                        "src": "1713:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 182,
                            "name": "queries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "1743:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                              "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                            }
                          },
                          "id": 184,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 183,
                            "name": "_queryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "1751:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1743:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bet_$82_storage",
                            "typeString": "struct Coinflip.Bet storage ref"
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "betamount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79,
                        "src": "1743:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1772:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 176,
                      "name": "QueryCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "1688:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1688:91:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "EmitStatement",
                  "src": "1683:96:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "38bbfa50",
            "id": 190,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 190,
                  "src": "882:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 190,
                  "src": "900:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 190,
                  "src": "923:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "881:62:2"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:0:2"
            },
            "scope": 255,
            "src": "862:972:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 237,
              "nodeType": "Block",
              "src": "1871:691:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 195,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1954:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Coinflip_$255",
                              "typeString": "contract Coinflip"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Coinflip_$255",
                              "typeString": "contract Coinflip"
                            }
                          ],
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1946:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 193,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1946:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1946:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1946:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 198,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1971:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1971:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1983:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1971:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 202,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1970:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1946:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 208,
                  "nodeType": "IfStatement",
                  "src": "1942:192:2",
                  "trueBody": {
                    "id": 207,
                    "nodeType": "Block",
                    "src": "1986:148:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 204,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "2118:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2118:8:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 206,
                        "nodeType": "ExpressionStatement",
                        "src": "2118:8:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 210,
                      "mutability": "mutable",
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 237,
                      "src": "2140:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 209,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2140:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 216,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2184:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2187:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "323030303030",
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2190:6:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        "value": "200000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        }
                      ],
                      "id": 211,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5700,
                      "src": "2158:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2158:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2140:57:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 218,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "2327:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 217,
                      "name": "QueryInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2312:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2312:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 220,
                  "nodeType": "EmitStatement",
                  "src": "2307:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 221,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "2375:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                            "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                          }
                        },
                        "id": 223,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 222,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "2383:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2375:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bet_$82_storage",
                          "typeString": "struct Coinflip.Bet storage ref"
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bettor_address",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77,
                      "src": "2375:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2409:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2409:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2375:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "2375:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 229,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "2474:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bet_$82_storage_$",
                            "typeString": "mapping(bytes32 => struct Coinflip.Bet storage ref)"
                          }
                        },
                        "id": 231,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 230,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "2482:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2474:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bet_$82_storage",
                          "typeString": "struct Coinflip.Bet storage ref"
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "betamount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79,
                      "src": "2474:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 233,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2503:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2503:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2474:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "2474:38:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "81d7788f",
            "id": 238,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Flip",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1853:2:2"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1871:0:2"
            },
            "scope": 255,
            "src": "1840:722:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "2615:76:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "2678:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 245,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2658:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2658:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2658:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2658:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "2658:27:2"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 254,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 243,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 242,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 47,
                  "src": "2606:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2606:9:2"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 254,
                  "src": "2586:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2586:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2585:13:2"
            },
            "returnParameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2615:0:2"
            },
            "scope": 255,
            "src": "2568:123:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 256,
        "src": "81:2613:2"
      }
    ],
    "src": "0:2696:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xc60cd3103e975935a1f11c0f69998be44b676b15595e9ddc289b1620ecbfb6c0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "returnedQueryID",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "betResult",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "netamount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "proof",
              "type": "bytes"
            }
          ],
          "name": "QueryCompleted",
          "type": "event"
        },
        "0xcdd755170296942af9549272d6a3c69dc91e2aefe8e51e428d3b552d00825457": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "InitialQueryID",
              "type": "bytes32"
            }
          ],
          "name": "QueryInitiated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE6b1A0391DE3bDf52baE22D9B9c527127c7C56a4",
      "transactionHash": "0x613bfa23bbda09084325b382d79f9505b29b2a684f013f3ca6fded57b0d7b9fd"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-09T13:28:50.081Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}